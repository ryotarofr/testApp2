import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import { getProducts, Product } from '@stripe/firestore-stripe-payments'
import payments from '../lib/stripe'
import useAuth from '../hooks/useAuth'
import useSubscription from '../hooks/useSubscription'
import Plans from '../components/Plans/Plans'
import Header from '../components/Header'


interface Props {
  products: Product[]
}

export default function Home({ products }: Props) {
  console.log(products);

  const { user, loading } = useAuth()

  const subscription = useSubscription(user)
  if (loading || subscription === null) return null

  if (!subscription) return <Plans products={products} />

  return (
    <div className={styles.container}>
      <Head>
        <title>aCreate Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}


export const getServerSideProps = async () => {
  const products = await getProducts(payments, {
    includePrices: true,
    activeOnly: true,
  })
    .then((res) => res)
    .catch((error) => console.log(error.message))

  // const [
  //   netflixOriginals,
  //   trendingNow,
  //   topRated,
  //   actionMovies,
  //   comedyMovies,
  //   horrorMovies,
  //   romanceMovies,
  //   documentaries,
  // ] = await Promise.all([
  //   fetch(requests.fetchNetflixOriginals).then((res) => res.json()),
  //   fetch(requests.fetchTrending).then((res) => res.json()),
  //   fetch(requests.fetchTopRated).then((res) => res.json()),
  //   fetch(requests.fetchActionMovies).then((res) => res.json()),
  //   fetch(requests.fetchComedyMovies).then((res) => res.json()),
  //   fetch(requests.fetchHorrorMovies).then((res) => res.json()),
  //   fetch(requests.fetchRomanceMovies).then((res) => res.json()),
  //   fetch(requests.fetchDocumentaries).then((res) => res.json()),
  // ])

  return {
    props: {
      // netflixOriginals: netflixOriginals.results,
      // trendingNow: trendingNow.results,
      // topRated: topRated.results,
      // actionMovies: actionMovies.results,
      // comedyMovies: comedyMovies.results,
      // horrorMovies: horrorMovies.results,
      // romanceMovies: romanceMovies.results,
      // documentaries: documentaries.results,
      products,
    },
  }
}
